{"version":3,"file":"static/js/753.c6d3238a.chunk.js","mappings":"6NAEaA,EAAgBC,EAAAA,GAAAA,GAAH,2YAgBbC,EAAcD,EAAAA,GAAAA,IAAH,4EAIXE,EAAaF,EAAAA,GAAAA,GAAH,2CAGVG,EAAYH,EAAAA,GAAAA,GAAH,iG,SCmBtB,EAvCkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,IAAD,WACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAExB,OACE,UAACP,EAAD,YACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,SAACJ,EAAD,CACEa,IACEJ,EAAW,UANA,mCAMA,OACWA,GAClB,iEAENK,IAAKN,EACLO,MAAM,WAGV,SAACd,EAAD,UAAaO,MAZCD,EAenB,OAIR,C,sKC9BYS,EAAOjB,EAAAA,GAAAA,KAAH,kMASJkB,EAAYlB,EAAAA,GAAAA,MAAH,4JASTmB,EAAYnB,EAAAA,GAAAA,OAAH,qS,SCoBtB,EApCmB,SAAC,GAAkB,IAAhBoB,EAAe,EAAfA,SACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,SAAC,IAAD,WACE,UAACN,EAAD,CAAMG,SAZW,SAAAI,GACnBA,EAAEC,iBACyB,KAAvBH,EAAYI,QACdC,MAAM,wBAGRP,EAASE,GACTC,EAAe,GAChB,EAIG,WACE,SAACL,EAAD,CACEU,KAAK,OACLC,KAAK,QACLC,MAAOR,EACPS,SArBa,SAAAP,GACnBD,EAAeC,EAAEQ,OAAOF,MAAMG,cAC/B,EAoBOC,YAAY,oBACXC,aAAa,SAEhB,SAAChB,EAAD,CAAWS,KAAK,SAAhB,SAA0B,eAMjC,E,QCOD,EAtCe,WAAO,IAAD,EACnB,GAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMR,EAAK,UAAGO,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeoC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,uGACsBC,EAAAA,EAAAA,IAAmBZ,GADzC,OACQa,EADR,OAEQC,EAAUD,EAAMpC,KAAI,kBACxB,CAAEC,GADsB,EAAGA,GACrBC,MADkB,EAAOA,MAClBC,YADW,EAAcA,YAAd,IAE1B8B,EAAUI,GAJZ,4CAJc,sBACA,KAAVd,GADU,mCAUde,EACD,GAAE,CAACf,IAEJ,IAKMgB,EAAoB,SAAAC,GAExBT,EAD4B,KAAVS,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,EAED,OACE,6BACE,SAAC,EAAD,CAAY3B,SAZG,SAAAE,GACjBgB,EAAgB,IAChBQ,EAAkBxB,EACnB,IAUIlB,IAAU,SAAC4C,EAAA,EAAD,CAAW5C,OAAQA,MAKnC,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesGallery = styled.ul`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    height: 280px;\n    grid-gap: 20px;\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nexport const MoviesImage = styled.img`\n  box-shadow: 0 0 5px #000;\n  border-radius: 6px;\n`;\nexport const MovieTitle = styled.h2`\n  color: #444445;\n`;\nexport const MovieItem = styled.li`\n  transition: all 0.3s;\n  &:hover {\n    transform: scale(1.005);\n  }\n`;\n\n\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container } from 'components/App.styled';\nimport { MoviesGallery, MoviesImage, MovieTitle, MovieItem} from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <MoviesGallery>\n        {movies.map(({ id, title, poster_path }) => {\n          const base_img_url = 'https://image.tmdb.org/t/p/w500';\n          return (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MoviesImage\n                  src={\n                    poster_path\n                      ? `${base_img_url}${poster_path}`\n                      : 'https://sd.keepcalms.com/i-w600/keep-calm-poster-not-found.jpg'\n                  }\n                  alt={title}\n                  width=\"500\"\n                />\n              </Link>\n              <MovieTitle>{title}</MovieTitle>\n            </MovieItem>\n          );\n        })}\n      </MoviesGallery>\n    </Container>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n text-align: center;\nwidth: 100%;\n\n  margin-bottom: 10px;\n  background-color: #17bccf;\n  padding: 20px;\n box-shadow: 5px 5px 10px #676b6b, -5px -5px 10px #ffffff;\n`;\nexport const InputForm = styled.input`\n margin-right: 5px;\nwidth: 350px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  font-size: 18px;\n  border-radius: 4px;\n`;\nexport const BtnSubmit = styled.button`\ncolor:#fff;\n  border: none;\n  border-radius: 5px;\n  background-color: #0496c2;\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n\n\n  &:hover,\n  &:focus {\n    &:not([disabled]) {\n      box-shadow: 0 0 5px #000;\n      cursor: pointer;\n    }\n  }\n`;\n\n\n","import { Container } from 'components/App.styled';\nimport { Form, InputForm, BtnSubmit } from './SearchForm.styled';\nimport { useState} from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <InputForm\n          type=\"text\"\n          name=\"value\"\n          value={searchQuery}\n          onChange={handleChange}\n          placeholder=\"Search movies ...\"\n           autocomplete=\"off\"\n        />\n        <BtnSubmit type=\"submit\" >\n          Search\n        </BtnSubmit>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import { searchMovieByQuery } from 'service/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport  SearchForm  from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const value = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (value === '') {\n      return;\n    }\n    async function fetchMovies() {\n      const movie = await searchMovieByQuery(value);\n      const results = movie.map(({ id, title, poster_path }) => (\n        { id, title, poster_path, }));\n      setMovies(results);\n    }\n    fetchMovies();\n  }, [value]);\n\n  const formSubmit = searchQuery => {\n    setSearchParams('');\n    updateSearchValue(searchQuery);\n  };\n\n  const updateSearchValue = query => {\n    const nextValue = query !== '' ? { query } : {};\n    setSearchParams(nextValue);\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={formSubmit} />\n      {movies && <MovieList movies={movies} />}\n     \n      \n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesGallery","styled","MoviesImage","MovieTitle","MovieItem","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","Form","InputForm","BtnSubmit","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","alert","type","name","value","onChange","target","toLowerCase","placeholder","autocomplete","useSearchParams","searchParams","setSearchParams","get","setMovies","useEffect","searchMovieByQuery","movie","results","fetchMovies","updateSearchValue","query","MovieList"],"sourceRoot":""}